
t0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000025  00000000  00000000  00000122  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000ad  00000000  00000000  00000147  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000079  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000e4  00000000  00000000  0000026d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  00000354  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000096  00000000  00000000  00000384  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000018  00000000  00000000  0000041a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 1000000UL
#include<avr/io.h>
void delay();
void main()
{
 DDRA=DDRA|(1<<0);
  6c:	d0 9a       	sbi	0x1a, 0	; 26
  }
}
void delay()
{
  TCNT0=0;
  TCCR0=0b000000101;//1024uS
  6e:	95 e0       	ldi	r25, 0x05	; 5
void main()
{
 DDRA=DDRA|(1<<0);
  while(1)
  {
	  PORTA=PORTA | (1<<0);
  70:	d8 9a       	sbi	0x1b, 0	; 27
	  delay();
  }
}
void delay()
{
  TCNT0=0;
  72:	12 be       	out	0x32, r1	; 50
  TCCR0=0b000000101;//1024uS
  74:	93 bf       	out	0x33, r25	; 51
  while( (TIFR&(1<<TOV0)) ==0);//wait here till TOV0 is 0
  76:	08 b6       	in	r0, 0x38	; 56
  78:	00 fe       	sbrs	r0, 0
  7a:	fd cf       	rjmp	.-6      	; 0x76 <main+0xa>
  TIFR=TIFR|(1<<TOV0);
  7c:	88 b7       	in	r24, 0x38	; 56
  7e:	81 60       	ori	r24, 0x01	; 1
  80:	88 bf       	out	0x38, r24	; 56
 DDRA=DDRA|(1<<0);
  while(1)
  {
	  PORTA=PORTA | (1<<0);
	  delay();
	  PORTA=PORTA &~ (1<<0);
  82:	d8 98       	cbi	0x1b, 0	; 27
	  delay();
  }
}
void delay()
{
  TCNT0=0;
  84:	12 be       	out	0x32, r1	; 50
  TCCR0=0b000000101;//1024uS
  86:	93 bf       	out	0x33, r25	; 51
  while( (TIFR&(1<<TOV0)) ==0);//wait here till TOV0 is 0
  88:	08 b6       	in	r0, 0x38	; 56
  8a:	00 fe       	sbrs	r0, 0
  8c:	fd cf       	rjmp	.-6      	; 0x88 <main+0x1c>
  TIFR=TIFR|(1<<TOV0);
  8e:	88 b7       	in	r24, 0x38	; 56
  90:	81 60       	ori	r24, 0x01	; 1
  92:	88 bf       	out	0x38, r24	; 56
  94:	ed cf       	rjmp	.-38     	; 0x70 <main+0x4>

00000096 <delay>:
	  delay();
  }
}
void delay()
{
  TCNT0=0;
  96:	12 be       	out	0x32, r1	; 50
  TCCR0=0b000000101;//1024uS
  98:	85 e0       	ldi	r24, 0x05	; 5
  9a:	83 bf       	out	0x33, r24	; 51
  while( (TIFR&(1<<TOV0)) ==0);//wait here till TOV0 is 0
  9c:	08 b6       	in	r0, 0x38	; 56
  9e:	00 fe       	sbrs	r0, 0
  a0:	fd cf       	rjmp	.-6      	; 0x9c <delay+0x6>
  TIFR=TIFR|(1<<TOV0);
  a2:	88 b7       	in	r24, 0x38	; 56
  a4:	81 60       	ori	r24, 0x01	; 1
  a6:	88 bf       	out	0x38, r24	; 56
}
  a8:	08 95       	ret

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>
